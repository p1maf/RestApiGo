openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    patch:
      summary: Update task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    delete:
      summary: Delete task
      tags:
        - tasks
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: uint
          required: true
          description: ID task to delete
      responses:
        '204':
          description: Task delete
  /users:
    get:
      tags:
        - users
      summary: Get all users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request body
  /users/{id}:
      patch:
        tags:
          - users
        summary: Update user by ID
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
            description: User ID
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
        responses:
          '200':
            description: User updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '400':
            description: Invalid request body
          '404':
            description: User not found
      delete:
        tags:
          - users
        summary: Delete user by ID
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
            description: User ID
        responses:
          '204':
            description: User deleted successfully
          '404':
            description: User not found


components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: uint # так как в БД айди это только положительные числа.
        task:
          type: string
        is_done:
          type: boolean
    User:
      type: object
      properties:
        ID:
          type: integer
          format: uint
          description: User ID
        Email:
          type: string
          description: User email
        Password:
          type: string
          description: User password
        CreatedAt:
          type: string
          format: date-time
          description: Creation timestamp
        UpdatedAt:
          type: string
          format: date-time
          description: Last update timestamp
    NewUser:
      type: object
      properties:
        Email:
          type: string
          description: User email
        Password:
          type: string
          description: User password
      required:
        - Email
        - Password
    UpdateUser:
      type: object
      properties:
        Email:
          type: string
          description: User email
        Password:
          type: string
          description: User password